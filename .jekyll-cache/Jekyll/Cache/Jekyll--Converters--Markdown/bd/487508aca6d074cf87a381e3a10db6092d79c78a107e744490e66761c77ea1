I"73<ul>
  <li>데이터를 조회하는 3가지 방법</li>
  <li>SELECT 절과 FROM 절</li>
  <li>중복 데이터를 제거하는 DISTINCT</li>
</ul>

<hr />

<h3 id="-1-데이터를-조회하는-3가지-방법-">[ 1. 데이터를 조회하는 3가지 방법 ]</h3>

<h4 id="1-행-단위로-조회하는-selection">(1) 행 단위로 조회하는 SELECTION</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">SELECTION</code>은 <code class="language-plaintext highlighter-rouge">행 단위</code>로 원하는 데이터를 조회하는 방식이다.</li>
  <li>테이블 전체 데이터 중 몇몇 가로줄의 데이터만 선택할 때 사용한다.</li>
</ul>

<h4 id="2-열-단위로-조회하는-projection">(2) 열 단위로 조회하는 PROJECTION</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">PROJECTION</code>은 <code class="language-plaintext highlighter-rouge">열 단위</code>로 원하는 데이터를 조회하는 방식이다.</li>
</ul>

<h4 id="3-두-개-이상의-테이블을-사용하여-조회하는-join">(3) 두 개 이상의 테이블을 사용하여 조회하는 JOIN</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">JOIN</code>은 두 개 이상의 테이블을 양옆에 연결하여 마치 <code class="language-plaintext highlighter-rouge">하나의 테이블인 것</code>처럼 데이터를 조회하는 방식이다.</li>
</ul>

<hr />
<h3 id="-2-select-절과-from-절-">[ 2. SELECT 절과 FROM 절 ]</h3>
<ul>
  <li>SELECT문 = SELECT 절 + FROM 절</li>
  <li><code class="language-plaintext highlighter-rouge">FROM</code>절 : 조회할 데이터가 저장된 테이블 이름을 명시</li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">SELECT</code>절 : FROM절에 명시한 테이블에서 조회할 열이나 여러 열에 저장된 데이터의 조합 또는 연산식을 지정할 수 있다.</p>
  </li>
  <li>기본형식
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SELECT [조회할 열1 이름], [열2 이름], ..., [열N 이름]
FROM   [조회할 테이블 이름];
</code></pre></div>    </div>
  </li>
</ul>

<h4 id="1---로-테이블-전체-열-출력하기">(1)  <code class="language-plaintext highlighter-rouge">*</code> 로 테이블 전체 열 출력하기</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SELECT</span> <span class="o">*</span> <span class="n">FROM</span> <span class="n">EMP</span><span class="p">;</span>
</code></pre></div></div>

<p>결과 : 
<img src="https://user-images.githubusercontent.com/53929665/92938332-5f9b5880-f487-11ea-834f-0a933c9bd524.JPG" alt="3" /></p>

<h4 id="2-테이블-부분-열-출력하기">(2) 테이블 부분 열 출력하기</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SELECT</span> <span class="n">EMPNO</span><span class="p">,</span> <span class="n">ENAME</span><span class="p">,</span> <span class="n">DEPTNO</span> <span class="n">FROM</span> <span class="n">EMP</span><span class="p">;</span>
</code></pre></div></div>

<p>결과 :
<img src="https://user-images.githubusercontent.com/53929665/92938333-60cc8580-f487-11ea-95bd-a9f88841bfc4.JPG" alt="4" /></p>

<hr />
<h3 id="-3-중복-데이터를-제거하는-distinct-">[ 3. 중복 데이터를 제거하는 DISTINCT ]</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">SELECT</code>문으로 데이터를 조회한 후 <code class="language-plaintext highlighter-rouge">DISTINCT</code>를 사용하여 중복을 제거한다.</li>
</ul>

<h4 id="1-distinct로-열-중복-제거하기-열이-한-개인-경우">(1) DISTINCT로 열 중복 제거하기 (열이 한 개인 경우)</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SELECT</span> <span class="n">DISTINCT</span> <span class="n">DEPTNO</span> <span class="n">FROM</span> <span class="n">EMP</span><span class="p">;</span>
</code></pre></div></div>

<p>결과 : 
<img src="https://user-images.githubusercontent.com/53929665/92939291-8e65fe80-f488-11ea-8783-354f6c502154.JPG" alt="3-1" /></p>

<h4 id="2-distinct로-열-중복-제거하기-열이-여러-개인-경우">(2) DISTINCT로 열 중복 제거하기 (열이 여러 개인 경우)</h4>
<ul>
  <li>두 열의 값이 동시에 동일한 경우의 중복을 제거한다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SELECT</span> <span class="n">DISTINCT</span> <span class="n">JOB</span><span class="p">,</span><span class="n">DEPTNO</span> <span class="n">FROM</span> <span class="n">EMP</span><span class="p">;</span>
</code></pre></div></div>

<p>결과 : 
<img src="https://user-images.githubusercontent.com/53929665/92939296-902fc200-f488-11ea-946a-1df40e510264.JPG" alt="3-2" /></p>

<h4 id="3-all로-중복되는-열-제거-없이-그대로-출력하기">(3) ALL로 중복되는 열 제거 없이 그대로 출력하기</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">ALL</code>은 <code class="language-plaintext highlighter-rouge">DISTINCT</code>와 반대로 데이터 중복을 제거하지 않고 그대로 출력한다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SELECT</span> <span class="n">ALL</span> <span class="n">JOB</span><span class="p">,</span><span class="n">DEPTNO</span> <span class="n">FROM</span> <span class="n">EMP</span><span class="p">;</span>
</code></pre></div></div>

<hr />
<h3 id="-4-별칭-설정-">[ 4. 별칭 설정 ]</h3>
<ul>
  <li>SQL문에서는 최종 출력되는 열 이름을 임의로 지정할 수 있다.</li>
  <li>이렇게 본래 열 이름 대신 붙이는 이름을 <code class="language-plaintext highlighter-rouge">별칭(alias)</code>라고 한다.</li>
</ul>

<h4 id="1-열과-연산식">(1) 열과 연산식</h4>
<ul>
  <li>SAL*12+COMM또한 ENAME,SAL,COMM과 같이 명시한 열이 위쪽이름에 그대로 출력된다.</li>
  <li>(참조) SAL*12+COMM열에 모든 값이 출력되지 않는 이유는 COMM열의 값이 NULL인 사원들이 있기 때문이다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SELECT</span> <span class="n">ENAME</span><span class="p">,</span> <span class="n">SAL</span><span class="p">,</span> <span class="n">SAL</span><span class="o">*</span><span class="mi">12</span><span class="o">+</span><span class="n">COMM</span><span class="p">,</span><span class="n">COMM</span> <span class="n">FROM</span> <span class="n">EMP</span><span class="p">;</span>
</code></pre></div></div>

<p>결과 :
<img src="https://user-images.githubusercontent.com/53929665/92938334-60cc8580-f487-11ea-92b5-2d78a06f7eca.JPG" alt="4-1" /></p>

<h4 id="2-별칭-지정">(2) 별칭 지정</h4>
<ul>
  <li>오라클에서 별칭을 지정하려면 다음과 같이 4가지 방식중 하나를 선택하여 SELECT절에 사용해야한다.</li>
  <li>(참조) 일반적으로는 3번째 방법이 선호되지만,<br />
프로그래밍언어에서 문자열 대부분은 <code class="language-plaintext highlighter-rouge">" "</code>을사용하기 때문에, 문자열에서 SQL문을 사용할 경우 마지막 방법이 선호된다.</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: left">사용방법</th>
      <th style="text-align: left">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">SAL*12+COMM ANNSAL</td>
      <td style="text-align: left">연산 및 가공된 문장 이후 한 칸 띄우고 별칭 지정</td>
    </tr>
    <tr>
      <td style="text-align: left">SAL*12+COMM “ANNSAL”</td>
      <td style="text-align: left">연산 및 가공된 문장 이후 한 칸 띄우고 별칭을 큰따옴표(“)로 묶어 지정</td>
    </tr>
    <tr>
      <td style="text-align: left">(선호)SAL*12+COMM  AS ANNSAL</td>
      <td style="text-align: left">연산 및 가공된 문장 이후 한 칸 띄운 후 <code class="language-plaintext highlighter-rouge">AS</code>, 한 칸 뒤에 별칭 지정</td>
    </tr>
    <tr>
      <td style="text-align: left">SAL*12+COMM AS “ANNSAL”</td>
      <td style="text-align: left">연산 및 가공된 문장 이후 한 칸 띄운 후 <code class="language-plaintext highlighter-rouge">AS</code>, 한 칸 뒤에 별칭을 큰따옴표(“)로 묶어 지정</td>
    </tr>
  </tbody>
</table>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SELECT</span> <span class="n">ENAME</span><span class="p">,</span> <span class="n">SAL</span><span class="p">,</span> <span class="n">SAL</span><span class="o">*</span><span class="mi">12</span><span class="o">+</span><span class="n">COMM</span> <span class="n">AS</span> <span class="n">ANNSAL</span><span class="p">,</span><span class="n">COMM</span> <span class="n">FROM</span> <span class="n">EMP</span><span class="p">;</span>
</code></pre></div></div>

<p>결과 :
<img src="https://user-images.githubusercontent.com/53929665/92938336-61651c00-f487-11ea-94aa-16ea43c546ff.JPG" alt="4-2" /></p>

<hr />
<h3 id="-5-원하는-순서로-출력-데이터를-정렬하는-order-by-">[ 5. 원하는 순서로 출력 데이터를 정렬하는 ORDER BY ]</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">ORDER BY</code> : 데이터를 정렬된 상태로 출력하기 위해 사용</li>
  <li>SELECT문을 작성할 때 사용할 수 있는 여러 절 중 가장 마지막 부분에 쓰인다.</li>
  <li>정렬 옵션
    <ul>
      <li><code class="language-plaintext highlighter-rouge">ASC</code> : 오름차순  (default value)</li>
      <li><code class="language-plaintext highlighter-rouge">DESC</code>: 내림차순</li>
    </ul>
  </li>
  <li>
    <p>(주의) 가급적으로 정렬이 꼭 필요한 순간이 아니면 ORDER BY절을 넣지 않도록한다.<br />
이유 : 데이터의 크기에 비례하여 시간이 오래 걸리기 때문에</p>
  </li>
  <li>기본형식
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SELECT [조회할 열1 이름], [열2 이름], ..., [열N 이름]
FROM   [조회할 테이블 이름]
.
.  (그 밖의 절)
.
ORDER BY [정렬하려는 열 이름(여러 열 지정 가능)] [정렬 옵션];
</code></pre></div>    </div>
  </li>
</ul>

<h4 id="1-오름차순asc-사용">(1) 오름차순(ASC) 사용</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SELECT</span> <span class="o">*</span> <span class="n">FROM</span> <span class="n">EMP</span> <span class="n">ORDER</span> <span class="n">BY</span> <span class="n">SAL</span><span class="p">;</span>
</code></pre></div></div>

<p>결과 :
<img src="https://user-images.githubusercontent.com/53929665/92938339-61fdb280-f487-11ea-9a23-0b261bc6a5c7.JPG" alt="5-1(찐)" /></p>

<h4 id="2-내림차순desc-사용">(2) 내림차순(DESC) 사용</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SELECT</span> <span class="o">*</span> <span class="n">FROM</span> <span class="n">EMP</span> <span class="n">ORDER</span> <span class="n">BY</span> <span class="n">SAL</span> <span class="n">DESC</span><span class="p">;</span>
</code></pre></div></div>

<p>결과 : 
<img src="https://user-images.githubusercontent.com/53929665/92938342-61fdb280-f487-11ea-97f8-062650acda88.JPG" alt="5-2(찐)" /></p>

<h4 id="3-각각의-열에-내림차순desc와-오름차순asc-동시에-사용하기">(3) 각각의 열에 내림차순(DESC)와 오름차순(ASC) 동시에 사용하기</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SELECT</span> <span class="o">*</span> <span class="n">FROM</span> <span class="n">EMP</span> <span class="n">ORDER</span> <span class="n">BY</span> <span class="n">DEPTNO</span> <span class="n">ASC</span><span class="p">,</span> <span class="n">SAL</span> <span class="n">DESC</span><span class="p">;</span>
</code></pre></div></div>

<ul>
  <li>ORDER BY절에 첫 번째로 명시된 DEPTNO 열을 기준으로 먼저 오름차순으로 정렬한 후에<br />
DEPNOT(부서번호)가 같은, 즉 같은 부서에서 근무하고 있는 사원들끼리는 급여가 높은 사원부터 낮은 사원으로 내림차순으로 정렬하여 출력되었다.</li>
</ul>

<p>결과 : 
<img src="https://user-images.githubusercontent.com/53929665/92938345-62964900-f487-11ea-9fa7-24f6bb54f9c2.JPG" alt="5-3(찐)" /></p>

<p><br /></p>

<hr />

<h3 id="references">References</h3>

<ul>
  <li>이지훈, 『Do it! 오라클로 배우는 데이터베이스』, 이지스퍼블리싱 (2018)</li>
</ul>

:ET