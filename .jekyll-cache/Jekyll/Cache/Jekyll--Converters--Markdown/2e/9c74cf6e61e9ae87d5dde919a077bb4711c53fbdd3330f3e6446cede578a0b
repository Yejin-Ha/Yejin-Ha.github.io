I"\<h4 id="contents">Contents</h4>
<ul>
  <li><a href="#구간-분할--histogram">구간 분할 : histogram</a></li>
  <li><a href="#구간-별로-카테고리-지정--cut">구간 별로 카테고리 지정 : cut</a></li>
</ul>

<p>본 포스팅은 <code class="language-plaintext highlighter-rouge">pandas</code>의 <code class="language-plaintext highlighter-rouge">cut</code>메소드를 이용한 데이터 카테고리화에 관하여 정리하였습니다.</p>

<p><br /></p>

<hr />

<h2 id="구간-분할--histogram"><span style="color:navy">구간 분할 : histogram<span></span></span></h2>

<p>범주형 카테고리를 지정하기 전에 구간 분할을 진행해야 한다. <br /></p>

<p>구간 분할의 경우 수동으로 지정할 수 있지만, <code class="language-plaintext highlighter-rouge">numpy</code>의 <code class="language-plaintext highlighter-rouge">histogram</code> 메소드를 이용하면 균일한 구간을 생성할 수 있다. <code class="language-plaintext highlighter-rouge">histogram</code>메소드의 경우 메소드 문자 그대로 히스토그램 그릴 때 많이 사용하며, 더불어 <code class="language-plaintext highlighter-rouge">normed</code>, <code class="language-plaintext highlighter-rouge">weights</code> , <code class="language-plaintext highlighter-rouge">denstiy</code> 등의 통계 관련 선택적 옵션이 존재한다. <br /></p>

<p>해당 포스팅에서는 구간을 균등하게 분할하기 위해서 <code class="language-plaintext highlighter-rouge">bins</code> 옵션만 이용하고자 한다. <br /></p>

<p><code class="language-plaintext highlighter-rouge">bins</code>옵션은 히스토그램 차트의 막대 폭을 의미하며, 특정 범위를 균일한 구간을 몇개로 나눌지 지정할 때 사용한다. 기본값은 <code class="language-plaintext highlighter-rouge">bins=10</code>이다.<br /></p>

<p>그리고, 해당 메소드의 결과 <code class="language-plaintext highlighter-rouge">구간에 속하는 값의 개수</code>와 <code class="language-plaintext highlighter-rouge">경계값 리스트</code>를 순차적으로 반환한다.</p>

<p><br /></p>

<p>먼저, 구간을 나누기 위한 예제 데이터를 생성한다. 아래의 예제에서는 0부터 12까지의 연속적인 정수를 가진 데이터프레임을 생성하였다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">13</span><span class="p">))).</span><span class="n">rename</span><span class="p">(</span><span class="s">'x'</span><span class="p">).</span><span class="n">to_frame</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>     x
0    0
1    1
  .
  . 
  .
12  12
</code></pre></div></div>

<p><br /></p>

<p>그리고, 생성한 데이터프레임을 총 4개의 구간으로 분할하기 위해서 <code class="language-plaintext highlighter-rouge">bins=4</code>로 지정하였다. 그 결과 구간에 속하는 값의 개수와 경계값 리스트를 반환하였다.  위의 정수 배열을 완벽하게 4분할 할 수 없기 때문에 마지막 구간에 4개가 할당된 것을 확인할 수 있다.</p>

<p><img src="https://user-images.githubusercontent.com/53929665/136663970-b670f591-5659-4fd1-9322-764070634509.png" alt="category_fig1" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cnt</span><span class="p">,</span> <span class="n">bnd_list</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">histogram</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">bins</span> <span class="o">=</span> <span class="mi">4</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'각 구간에 속하는 원소 개수 : </span><span class="si">{</span><span class="n">cnt</span><span class="si">}</span><span class="s">'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'구간 범위 : </span><span class="si">{</span><span class="n">bnd_list</span><span class="si">}</span><span class="s">'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>각 구간에 속하는 원소 개수 : [3 3 3 4]
구간 범위 : [ 0.  3.  6.  9. 12.]
</code></pre></div></div>

<p><br /></p>

<h2 id="구간-별로-카테고리-지정--cut"><span style="color:navy">구간 별로 카테고리 지정 : cut<span></span></span></h2>

<p>연속 변수를 범주형 이산 변수로 만들 때는 위에서 언급했던 것 처럼 특정 조건을 만족하는 행을 색인하여 추가할 수도 있지만, <code class="language-plaintext highlighter-rouge">pandas</code>의 <code class="language-plaintext highlighter-rouge">cut</code>메소드를 이용해서 이를 수행할 수 있다.</p>

<p><code class="language-plaintext highlighter-rouge">cut</code>메소드의 기본 형식은 다음과 같다. 
(아래에 제시된 옵션외에도 다른 옵션들이 있으며, 참조링크를 통해 확인할 수 있다. 하지만, 아래에 제시된 옵션외에는 자주 사용될 것 같지는 않다.)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pandas</span><span class="p">.</span><span class="n">cut</span><span class="p">(</span>	<span class="n">x</span> <span class="o">=</span> <span class="p">...,</span> <span class="n">bins</span> <span class="o">=</span> <span class="p">...,</span> <span class="n">labels</span> <span class="o">=</span> <span class="p">...,</span> 
		<span class="n">include_lowest</span> <span class="o">=</span> <span class="bp">True</span><span class="o">|</span><span class="bp">False</span> <span class="p">,</span> 
		<span class="n">right</span> <span class="o">=</span> <span class="bp">True</span><span class="o">|</span><span class="bp">False</span> <span class="p">)</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">x</code> : 구간 분할을 수행하고자하는 데이터 배열 대상을 입력받는다. (필수 입력 옵션)</li>
  <li><code class="language-plaintext highlighter-rouge">bins</code> : numpy의 <code class="language-plaintext highlighter-rouge">bins</code>와 동일하다.</li>
  <li><code class="language-plaintext highlighter-rouge">labels</code>
    <ul>
      <li>각 구간에 대해 구체적인 라벨 명의 리스트를 입력받는다. (필수 입력 옵션)</li>
      <li><code class="language-plaintext highlighter-rouge">bins</code>옵션과 반드시 동일한 길이의 값을 받아야 한다.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">include_lowest</code>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">True</code>일 경우, 첫번째 구간의 반개구간을 폐구간으로 변경시킨다.</li>
      <li>첫번째 구간 : <code class="language-plaintext highlighter-rouge">(x, y]</code> → <code class="language-plaintext highlighter-rouge">[x, y]</code>, left-inclusive</li>
      <li><code class="language-plaintext highlighter-rouge">False</code>는 default이다.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">right</code>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">True</code> : <code class="language-plaintext highlighter-rouge">(x, y]</code>,  default 옵션이다.</li>
      <li><code class="language-plaintext highlighter-rouge">False</code> :  <code class="language-plaintext highlighter-rouge">[x, y)</code></li>
    </ul>
  </li>
</ul>

<p><br /></p>

<p>다음은 <code class="language-plaintext highlighter-rouge">bins</code>메소드에 관한 예제이다. <code class="language-plaintext highlighter-rouge">bins</code> 옵션의 경우 위에서 생성한 <code class="language-plaintext highlighter-rouge">bnd_list</code>를 넘겨주었다.</p>

<ul>
  <li><strong>ex1</strong>과 달리 <strong>ex2</strong>에서는 <code class="language-plaintext highlighter-rouge">include_lowest = True</code> 옵션을 지정하였기 때문에 <u>첫번째 구간만 폐구간</u>이며 <u>나머지 구간의 경우 </u><code class="language-plaintext highlighter-rouge">right</code>옵션을 별도로 지정하지 않았기 때문에 <u>왼쪽이 열려있는 반개구간</u>( <code class="language-plaintext highlighter-rouge">(x, y]</code> )범위를 따라서 범주화 된 것을 확인할 수 있다.</li>
  <li><strong>ex3</strong>의 경우, <code class="language-plaintext highlighter-rouge">right = False</code> 옵션을 지정하였기 때문에 <u>왼쪽이 닫혀있으며 오른쪽이 열려있는 반개구간</u>( <code class="language-plaintext highlighter-rouge">[x, y)</code> )범위를 따라서 범주화 된 것을 확인할 수 있다.</li>
  <li>ex3에서<code class="language-plaintext highlighter-rouge">right = False</code>의 경우 객체의 큰 값인 12가 어떠한 범주에도 포함되지 않아서 <code class="language-plaintext highlighter-rouge">NaN</code>을 반환하는 것을 확인할 수 있다. 이러한 <u>큰 값을 마지막 구간에 포함시키기 위한 </u><code class="language-plaintext highlighter-rouge">include_lowest</code><u> 와 같은 옵션이 존재하지 않기 때문에 </u><code class="language-plaintext highlighter-rouge">bins</code><u>옵션이 받는 경계값 리스트의 가장 큰값에 1을 더해주어 마지막 구간이 12를 포괄하도록</u> 하였다.</li>
  <li>더불어, 메소드에 의해 새로 생성된 컬럼은 <code class="language-plaintext highlighter-rouge">category</code>타입임을 확인할 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>

<span class="n">label_name1</span> <span class="o">=</span> \
<span class="p">[</span>
    <span class="sa">f</span><span class="s">'🔴 : (</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="s">]'</span><span class="p">,</span> <span class="c1"># 첫번째 구간
</span>    <span class="sa">f</span><span class="s">'🟡 : (</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="si">}</span><span class="s">]'</span><span class="p">,</span> <span class="c1"># 두번째 구간
</span>    <span class="sa">f</span><span class="s">'🟢 : (</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="si">}</span><span class="s">]'</span><span class="p">,</span> <span class="c1"># 세번쨰 구간
</span>    <span class="sa">f</span><span class="s">'🔵 : (</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="si">}</span><span class="s">]'</span>  <span class="c1"># 네번째 구간
</span><span class="p">]</span>

<span class="n">label_name2</span> <span class="o">=</span> \
<span class="p">[</span>
    <span class="sa">f</span><span class="s">'🔴 : [</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="s">]'</span><span class="p">,</span> <span class="c1"># 첫번째 구간
</span>    <span class="sa">f</span><span class="s">'🟡 : (</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="si">}</span><span class="s">]'</span><span class="p">,</span> <span class="c1"># 두번쨰 구간
</span>    <span class="sa">f</span><span class="s">'🟢 : (</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="si">}</span><span class="s">]'</span><span class="p">,</span> <span class="c1"># 세번째 구간
</span>    <span class="sa">f</span><span class="s">'🔵 : (</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="si">}</span><span class="s">]'</span>  <span class="c1"># 네번째 구간
</span><span class="p">]</span>

<span class="n">label_name3</span> <span class="o">=</span> \
<span class="p">[</span>
    <span class="sa">f</span><span class="s">'🔴 : [</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="s">)'</span><span class="p">,</span> <span class="c1"># 첫번째 구간
</span>    <span class="sa">f</span><span class="s">'🟡 : [</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="si">}</span><span class="s">)'</span><span class="p">,</span> <span class="c1"># 두번쨰 구간
</span>    <span class="sa">f</span><span class="s">'🟢 : [</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="si">}</span><span class="s">)'</span><span class="p">,</span> <span class="c1"># 세번째 구간
</span>    <span class="sa">f</span><span class="s">'🔵 : [</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="si">}</span><span class="s">)'</span>  <span class="c1"># 네번째 구간
</span><span class="p">]</span>  

<span class="n">label_name4</span> <span class="o">=</span> \
<span class="p">[</span>
    <span class="sa">f</span><span class="s">'🔴 : [</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="s">)'</span><span class="p">,</span> <span class="c1"># 첫번째 구간
</span>    <span class="sa">f</span><span class="s">'🟡 : [</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="si">}</span><span class="s">)'</span><span class="p">,</span> <span class="c1"># 두번쨰 구간
</span>    <span class="sa">f</span><span class="s">'🟢 : [</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="si">}</span><span class="s">)'</span><span class="p">,</span> <span class="c1"># 세번째 구간
</span>    <span class="sa">f</span><span class="s">'🔵 : [</span><span class="si">{</span><span class="n">bnd_list</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="si">}</span><span class="s">, 13)'</span>  <span class="c1"># 네번째 구간
</span><span class="p">]</span>  

 
<span class="c1"># 예제1 : 기본     
</span><span class="n">df1</span><span class="p">[</span><span class="s">'default'</span><span class="p">]</span> <span class="o">=</span> \
<span class="n">pd</span><span class="p">.</span><span class="n">cut</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'x'</span><span class="p">],</span> <span class="n">bins</span> <span class="o">=</span> <span class="n">bnd_list</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="n">label_name1</span><span class="p">)</span>

<span class="c1"># 예제2 : 첫번쨰 구간 : (] to []
</span><span class="n">df1</span><span class="p">[</span><span class="s">'include_lowest=True'</span><span class="p">]</span> <span class="o">=</span> \
<span class="n">pd</span><span class="p">.</span><span class="n">cut</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'x'</span><span class="p">],</span> <span class="n">bins</span> <span class="o">=</span> <span class="n">bnd_list</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="n">label_name2</span><span class="p">,</span> <span class="n">include_lowest</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>

<span class="c1"># 예제3 : right = False : [)
</span><span class="n">df1</span><span class="p">[</span><span class="s">'right=False'</span><span class="p">]</span> <span class="o">=</span> \
<span class="n">pd</span><span class="p">.</span><span class="n">cut</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'x'</span><span class="p">],</span> <span class="n">bins</span> <span class="o">=</span> <span class="n">bnd_list</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="n">label_name3</span><span class="p">,</span> <span class="n">right</span> <span class="o">=</span> <span class="bp">False</span><span class="p">)</span>

<span class="c1"># 예제4 : right = False &amp; 마지막 구간 : [) to []
</span><span class="n">bnd_copy</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">bnd_list</span><span class="p">)</span>
<span class="n">bnd_copy</span><span class="p">[</span><span class="n">bnd_copy</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">bnd_copy</span><span class="p">))]</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">bnd_copy</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span>
<span class="n">df1</span><span class="p">[</span><span class="s">'right=False &amp; bins 최대값+1'</span><span class="p">]</span> <span class="o">=</span> \
<span class="n">pd</span><span class="p">.</span><span class="n">cut</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'x'</span><span class="p">],</span> <span class="n">bins</span> <span class="o">=</span> <span class="n">bnd_copy</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="n">label_name4</span><span class="p">,</span> <span class="n">right</span> <span class="o">=</span> <span class="bp">False</span><span class="p">)</span> 

<span class="c1"># 결과 출력
</span><span class="n">df1</span><span class="p">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'x'</span><span class="p">,</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df1</span><span class="p">.</span><span class="n">info</span><span class="p">())</span>
<span class="n">df1</span>
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/53929665/136663971-a6aff3cd-86b5-476a-923b-dfdcab443e96.png" alt="categor_fig2" /></p>

<p><br /></p>

<hr />

<h2 id="references">References</h2>

<ul>
  <li><a href="">numpy histogram</a></li>
  <li><a href="https://pandas.pydata.org/docs/reference/api/pandas.cut.html">pandas  cut</a></li>
  <li>오승환, 『파이썬 머신러닝 판다스 데이터 분석』, 정보문화사 (2019)</li>
</ul>
:ET