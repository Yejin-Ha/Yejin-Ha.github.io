I"џ<h4 id="python-numpy">[Python] Numpy</h4>
<ul>
  <li>본 포스팅은 <code class="language-plaintext highlighter-rouge">Numpy</code> 라이브러리의 <u>배열의 인덱싱, 연산, 그리고 Broadcasting</u>에 관하여 다룹니다.</li>
  <li>정수 배열 인덱싱 / boolean 배열 인덱싱 / 배열의 자료형</li>
  <li>배열 연산 : <code class="language-plaintext highlighter-rouge">add</code> / <code class="language-plaintext highlighter-rouge">subtract</code> / <code class="language-plaintext highlighter-rouge">multiply</code> / <code class="language-plaintext highlighter-rouge">divide</code> / <code class="language-plaintext highlighter-rouge">sqrt</code> / <code class="language-plaintext highlighter-rouge">dot</code></li>
  <li>Broadcasting</li>
</ul>

<hr />

<h4 id="hello-numpy"><u>Hello! Numpy</u></h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
</code></pre></div></div>

<hr />

<h4 id="정수-배열-인덱싱"><u>정수 배열 인덱싱</u></h4>

<p><code class="language-plaintext highlighter-rouge">Numpy</code> 배열을 슬라이싱하면, 결과로 얻어지는 배열은 언제나 기존 배열의 부분 배열이다.<br />그러나 정수 배열 인덱싱을 한다면, 원본과 다른 배열을 만들 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]])</span>
<span class="n">a</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[1, 2],
       [3, 4],
       [4, 5]])
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">array_obj[[row1, row2, row3], [col1, col2, col3]]</code></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="p">[[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">]]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([1, 4, 4])
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">np.array([ array_obj[row1, col1], array_obj[row2, col2], array_obj[row3, col3] ])</code></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="n">a</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">]])</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([1, 4, 4])
</code></pre></div></div>

<p>다음과 같이 선언하여 객체에 넣게되면 튜플형태로 반환된다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">b</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>
<span class="k">print</span> <span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="k">print</span> <span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">b</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(1, 4, 4)
&lt;class 'tuple'&gt;
</code></pre></div></div>

<p>정수 배열 인덱싱을 가장 유용하게 사용하는 방법 중 하나는<br /><u>행렬의 각 행에서 하나의 요소를 선택하거나 바꾸는 것이다</u></p>

<p>요소를 선택할 새로운 배열을 생성한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">13</span><span class="p">)</span>
<span class="n">a</span><span class="p">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
<span class="n">a</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[ 1,  2,  3],
       [ 4,  5,  6],
       [ 7,  8,  9],
       [10, 11, 12]])
</code></pre></div></div>

<p>인덱스를 저장할 배열 생성</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">b</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
<span class="n">b</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([0, 2, 0, 1])
</code></pre></div></div>

<p>b에 저장된 인덱스를 이용해 각 행에서 하나의 요소를 선택한다.<br />
다음의 예시는</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="p">[[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">]]</span> 
</code></pre></div></div>

<p>과 동일하다</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="p">[</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">4</span><span class="p">),</span> <span class="n">b</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([ 1,  6,  7, 11])
</code></pre></div></div>

<p>이를 응용하여, b에 저장된 인덱스를 이용해 각 행에서 하나의 요소를 변경할 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="p">[</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">4</span><span class="p">),</span> <span class="n">b</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">10</span>
<span class="n">a</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[31,  2,  3],
       [ 4,  5, 36],
       [37,  8,  9],
       [10, 41, 12]])
</code></pre></div></div>

<hr />

<h4 id="boolean-배열-인덱싱"><u>boolean 배열 인덱싱</u></h4>

<p>Boolean 배열 인덱싱을 통해 배열안에 있는 요소들을 선택할 수 있다.<br />해당 인덱싱은 <u>특정 조건을 만족하게하는 요소만 선택</u>하고자 할 때 자주 사용된다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]])</span>
<span class="n">a</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[1, 2],
       [3, 4],
       [4, 5]])
</code></pre></div></div>

<p>다음의 예시는 boolean배열 인덱싱의 예시이다.<br /> 2보다 큰 a의 요소를 찾고자 할때 다음과 같이 수행한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bool_idx</span> <span class="o">=</span> <span class="p">(</span><span class="n">a</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">)</span>
<span class="n">bool_idx</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[False, False],
       [ True,  True],
       [ True,  True]])
</code></pre></div></div>

<p>이를 기존 배열에서 True인 값을 가지는 요소로 구성되는 rank 1인 배열을 출력할 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="p">[</span><span class="n">bool_idx</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([3, 4, 4, 5])
</code></pre></div></div>

<p>위에서 설명된 것들을 한 단락으로 정리하면 다음과 같다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="p">[</span><span class="n">a</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([3, 4, 4, 5])
</code></pre></div></div>

<hr />

<h4 id="자료형"><u>자료형</u></h4>

<p><code class="language-plaintext highlighter-rouge">Numpy</code>가 자료형을 추측해서 선택한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 정수형
</span><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">])</span>
<span class="n">x</span><span class="p">.</span><span class="n">dtype</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dtype('int32')
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 실수형
</span><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mf">1.</span> <span class="p">,</span> <span class="mf">2.</span><span class="p">])</span>
<span class="n">x</span><span class="p">.</span><span class="n">dtype</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dtype('float64')
</code></pre></div></div>

<p>특정 <u>자료형을 명시적으로 지칭</u>하여 사용할 수도 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 정수형으로 작성했지만, 자료형을 float으로 명시하여 float자료형의 value가 x값에 대입된다.
</span><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="n">dtype</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">float64</span><span class="p">)</span>
<span class="n">x</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([1., 2.])
</code></pre></div></div>

<hr />

<h4 id="배열-연산"><u>배열 연산</u></h4>

<p>기본적인 수학 함수들은 배열의 <u>각 요소별</u>로 동작하며<br />연산자를 통해 동작하거나 numpy 함수 모듈을 통해 동작한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 연습용 배열 생성
</span><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="n">dtype</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">float64</span><span class="p">).</span><span class="n">reshape</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="n">dtype</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">float64</span><span class="p">).</span><span class="n">reshape</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">y</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[[0. 1.]
 [2. 3.]]
[[4. 5.]
 [6. 7.]]
</code></pre></div></div>

<ul>
  <li><u>Array 합</u>
    <ul>
      <li>연산자 : <code class="language-plaintext highlighter-rouge">+</code></li>
      <li>numpy 함수 : <code class="language-plaintext highlighter-rouge">np.add()</code></li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">+</span> <span class="n">y</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[ 4.,  6.],
       [ 8., 10.]])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[ 4.,  6.],
       [ 8., 10.]])
</code></pre></div></div>

<ul>
  <li><u>Array 차</u>
    <ul>
      <li>연산자 : <code class="language-plaintext highlighter-rouge">-</code></li>
      <li>numpy 함수 : <code class="language-plaintext highlighter-rouge">np.subtract()</code></li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">-</span> <span class="n">y</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[-4., -4.],
       [-4., -4.]])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">subtract</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[-4., -4.],
       [-4., -4.]])
</code></pre></div></div>

<ul>
  <li><u>Array 곱</u>
    <ul>
      <li>연산자 : <code class="language-plaintext highlighter-rouge">*</code></li>
      <li>numpy 함수 : <code class="language-plaintext highlighter-rouge">np.multiply()</code></li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">*</span> <span class="n">y</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[ 0.,  5.],
       [12., 21.]])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">multiply</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[ 0.,  5.],
       [12., 21.]])
</code></pre></div></div>

<ul>
  <li><u>Array 나눗셈</u>
    <ul>
      <li>연산자 : <code class="language-plaintext highlighter-rouge">/</code></li>
      <li>numpy 함수 : <code class="language-plaintext highlighter-rouge">np.divide()</code></li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">/</span> <span class="n">y</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[0.        , 0.2       ],
       [0.33333333, 0.42857143]])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">divide</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[0.        , 0.2       ],
       [0.33333333, 0.42857143]])
</code></pre></div></div>

<ul>
  <li><u>Array 제곱근</u>
    <ul>
      <li>numpy 함수 : <code class="language-plaintext highlighter-rouge">np.sqrt()</code></li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[0.        , 1.        ],
       [1.41421356, 1.73205081]])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">y</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[2.        , 2.23606798],
       [2.44948974, 2.64575131]])
</code></pre></div></div>

<p>또한 <code class="language-plaintext highlighter-rouge">Numpy</code>는 백터의 내적이나 백터 곱 그리고 열과 행을 합산하는 등의 유용한 함수를 제공한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 백터의 내적/곱을 실습하기위한 배열 생성
</span><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]])</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">]])</span>

<span class="n">v</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">])</span>
<span class="n">w</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">])</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">dot()</code>
    <ul>
      <li>백터의 내적</li>
      <li>행렬과 백터 곱</li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 백터의 내적
</span><span class="k">print</span><span class="p">(</span><span class="n">v</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">w</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="n">w</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>219
219
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># rank 2 행렬과 rank 1 백터 곱
</span><span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">v</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">v</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[29 67]
[29 67]
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># rank 2 행렬과 rank 2 행렬 곱
</span><span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">y</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[[19 22]
 [43 50]]
[[19 22]
 [43 50]]
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">sum()</code>
    <ul>
      <li>배열안의 요소들을 합산하고 싶을 때 사용한다.</li>
      <li><code class="language-plaintext highlighter-rouge">axis = 0</code> : 각 열에 대한 합산을 연산하고 싶을 경우</li>
      <li><code class="language-plaintext highlighter-rouge">axis = 1</code> : 각 행에 대한 합산을 연산하고 싶을 경우</li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># axis 옵션을 사용하지 않을 경우 단순히 모든 요소들을 합산한다.
</span><span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>10
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 열에 대한 합산
</span><span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([4, 6])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 행에 대한 합산
</span><span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([3, 7])
</code></pre></div></div>

<hr />

<h4 id="numpy-broadcasting"><u>Numpy Broadcasting</u></h4>

<p>파이썬에서 말하는 Broadcasting은 방송이라는 명사적 의미보다는 <u>spread</u>라는 동사적의미가 강하다.<br />
일반적으로는 다음과 같이 numpy로 생성된 사이즈가 다른 배열끼리는 연산이 불가능하다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]])</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">]])</span>

<span class="n">x</span> <span class="o">+</span> <span class="n">y</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-104-6295914b1607&gt; in &lt;module&gt;
      2 y = np.array([[1, 2]])
      3 
----&gt; 4 x + y


ValueError: operands could not be broadcast together with shapes (1,4) (1,2) 
</code></pre></div></div>

<p>위의 에러 문구를 읽어보면 broadcast가 되지 못했다는 의미를 가지고 있다.<br /> 즉, <u>어떤 조건을 만족한다면 사이즈가 다른 배열 끼리의 연산도 가능하다는 말이다.</u></p>

<p>이때, <code class="language-plaintext highlighter-rouge">Broadcasting</code>은 <code class="language-plaintext highlighter-rouge">numpy</code>에서 <u>사이즈가 다른 배열 간에도 산술 연산이 가능하게한다.</u><br />종종 작은 배열과 큰 배열이 있을 때, 큰 배열을 대상으로 작은 배열을 여러 번 연산하고자 할 때 사용한다.<br /> 예를 들자면, 행렬의 각 행에 상수 벡터를 더하는 것을 생각하면된다.</p>

<p>다음의 같은 결과들을 출력하는 순차적인 예제들을 살펴보자</p>

<p>행렬 x의 각 행에 백터 v를 더한 뒤,<br /> 그 결과를 행렬 y에 저장하고자 한다.</p>

<h4 id="process1-반복문을-이용한-방법">[Process1] 반복문을 이용한 방법</h4>

<p>일반적으로는 for문을 이용해서 간단하게 결과를 출력할 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">],</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">]])</span>
<span class="n">v</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">empty_like</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>   <span class="c1"># x와 동일한 shape를 가지며 비어있는 행렬 생성
</span></code></pre></div></div>

<p>반복문을 통하여 행렬 x의 각 행에 v를 더한다</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">4</span><span class="p">):</span>
    <span class="n">y</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="p">:]</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="p">:]</span> <span class="o">+</span> <span class="n">v</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">y</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[ 2,  2,  4],
       [ 5,  5,  7],
       [ 8,  8, 10],
       [11, 11, 13]])
</code></pre></div></div>

<p><u>하지만, 위의 방식대로하면 `x`가 만약 매우 큰 행렬이라면,<br />위처럼 반복문을 이용하면 매우 느려질 수 있다.</u></p>

<h4 id="process2-tile함수를-이용한-방법">[Process2] <code class="language-plaintext highlighter-rouge">tile</code>함수를 이용한 방법</h4>

<p>이때, 백터<code class="language-plaintext highlighter-rouge">v</code>를 행렬<code class="language-plaintext highlighter-rouge">x</code>의 각 행에 대하는 것을<br /> <code class="language-plaintext highlighter-rouge">v</code>를 여러개 복사해 수직으로 쌓는 행렬을 만들고 앞과 같은 과정을 수행가능하다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">],</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">]])</span>
<span class="n">v</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
<span class="n">x</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[ 1,  2,  3],
       [ 4,  5,  6],
       [ 7,  8,  9],
       [10, 11, 12]])
</code></pre></div></div>

<p>v를 차곡차곡 <code class="language-plaintext highlighter-rouge">tile</code>함수를 이용하여 쌓는다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">vv</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">tile</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
<span class="n">vv</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[1, 0, 1],
       [1, 0, 1],
       [1, 0, 1],
       [1, 0, 1]])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">+</span> <span class="n">vv</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[ 2,  2,  4],
       [ 5,  5,  7],
       [ 8,  8, 10],
       [11, 11, 13]])
</code></pre></div></div>

<p>하지만, <code class="language-plaintext highlighter-rouge">Numpy</code>의 <code class="language-plaintext highlighter-rouge">Broadcasting</code>을 이용하면 위처럼 v의 <u>복사본을 여러 개 쌓아서 만들지 않아도 같은 연산을 수행할 수 있다.</u></p>

<h4 id="process3-numpy의-broadcasting을-이용한-방법">[Process3] Numpy의 Broadcasting을 이용한 방법</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">],</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">],</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">]])</span>
<span class="n">v</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">x</code>의 사이즈가 (4, 3)이고, <code class="language-plaintext highlighter-rouge">v</code>의 사이즈가 (3, )지만 <code class="language-plaintext highlighter-rouge">Broadcasting</code>으로 인해 문제없이 아래와 같이 연산이 수행된다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">+</span> <span class="n">v</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[ 2,  2,  4],
       [ 5,  5,  7],
       [ 8,  8, 10],
       [11, 11, 13]])
</code></pre></div></div>

<p>이때 <code class="language-plaintext highlighter-rouge">v</code>는 <code class="language-plaintext highlighter-rouge">v</code>의 복사본이 차곡차곡 쌓인 shape(4,3) 처럼 간주되어 <code class="language-plaintext highlighter-rouge">x</code>와 동일한 사이즈가 되며 두 배열 간의 요소별 덧셈연산이 가능해진 것이다.</p>

<p><img width="600" alt="12" src="https://user-images.githubusercontent.com/53929665/98439367-cca03700-2134-11eb-97a1-f402ee656abb.PNG" /></p>

<p>또한, <code class="language-plaintext highlighter-rouge">Broadcasting</code>은 다음의 규칙을 따른다.</p>

<ul>
  <li>
    <p>두 배열이 동일한 차원을 가지고 있지 않다면, 낮은 차원의 배열이 높은 차원의 배열과 <u>같은 차원의 배열로 인식된다.</u></p>
  </li>
  <li>
    <p>반환된 배열은 연산을 수행한 배열 중 <u>rank가 가장 큰 배열과 같다.</u></p>
  </li>
  <li>
    <p>broadcasting이 적용된 배열의 사이즈는 연산에 사용된 배열들의 사이즈에 대한 <u>최소 공배수</u> 값을 사용한다.</p>
  </li>
  <li>
    <p>요소가 하나인 배열은 어떤 배열에나 broadcasting을 적용할 수 있다. ex) 4X4 + 1</p>
  </li>
  <li>
    <p>하나의 배열이 차원이 1인 경우 broadcasting을 적용할 수 있다. ex) 4X4 + 1X4</p>
  </li>
  <li>
    <p>차원의 짝이 맞을 때 broadcasting을 적용할 수 있다. ex) 3X1 + 1X3</p>
  </li>
</ul>

<hr />

<h3 id="references">References</h3>

<ul>
  <li>http://aikorea.org/cs231n/python-numpy-tutorial/#numpy-arrays</li>
  <li>https://sacko.tistory.com/16</li>
  <li>https://appia.tistory.com/184</li>
  <li>https://076923.github.io/posts/Python-numpy-12/</li>
</ul>

:ET