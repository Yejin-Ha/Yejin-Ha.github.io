I"_!<h4 id="bigquery-array-unnest-struct">BigQuery <code class="language-plaintext highlighter-rouge">ARRAY</code>, <code class="language-plaintext highlighter-rouge">UNNEST</code>, <code class="language-plaintext highlighter-rouge">STRUCT</code></h4>
<ul>
  <li>본 포스팅은 BigQuery의 <code class="language-plaintext highlighter-rouge">ARRAY</code>, <code class="language-plaintext highlighter-rouge">UNNEST</code>, <code class="language-plaintext highlighter-rouge">STRUCT</code>에 관한<br />  <u>검색, 집계</u>에 관한 정보를  다룹니다.</li>
</ul>

<h4 id="contents">contents</h4>
<ul>
  <li>배열 검색 - <code class="language-plaintext highlighter-rouge">IN</code>, <code class="language-plaintext highlighter-rouge">EXSITS</code></li>
  <li>배열과 집계 - <code class="language-plaintext highlighter-rouge">ARRAY_AGG</code>, <code class="language-plaintext highlighter-rouge">ARRAY_CONCAT_AGG</code></li>
</ul>

<hr />

<h3 id="-1-배열-검색-">[ 1. 배열 검색 ]</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">UNNEST</code>의 <code class="language-plaintext highlighter-rouge">IN</code> 연산자
      - 배열에 특정 값이 있는지 확인하기 위해서 사용한다.
<br /></li>
  <li><code class="language-plaintext highlighter-rouge">UNNEST</code>의 <code class="language-plaintext highlighter-rouge">EXISTS</code> 연산자
    <ul>
      <li>배열에 조건과 일치하는 값이 있는지 확인</li>
    </ul>
  </li>
</ul>

<h3 id="특정-값-검색">특정 값 검색</h3>
<ul>
  <li>배열에서 <u>특정 값을 검색</u>하려면 <code class="language-plaintext highlighter-rouge">IN</code>연산자를 사용해야한다.</li>
  <li>다음 예시는 배열에 숫자 2가 있으면 반환한다.</li>
</ul>

<pre><code class="language-SQL">SELECT 2 IN UNNEST([0, 1, 1, 2, 3, 5]) AS contains_value;
</code></pre>

<p><img width="150" alt="1" src="https://user-images.githubusercontent.com/53929665/96666280-c28ae400-1391-11eb-92a2-4c711d8d7d62.PNG" /></p>

<ul>
  <li>배열 열에 <u>특정 값이 있는 테이블 행을 반환하려면</u><br /> <code class="language-plaintext highlighter-rouge">WHERE</code> 절을 사용하여 <code class="language-plaintext highlighter-rouge">IN UNNEST</code> 결과를 필터링한다.</li>
  <li>다음 예시는 각 행의 배열 값으로 2를 가지고 있는 행의 id 값을  모두 반환한다.</li>
</ul>

<pre><code class="language-SQL">WITH sequences AS
  (SELECT 1 AS id, [0, 1, 1, 2, 3, 5] AS some_numbers
   UNION ALL SELECT 2 AS id, [2, 4, 8, 16, 32] AS some_numbers
   UNION ALL SELECT 3 AS id, [5, 10] AS some_numbers)
SELECT id AS matching_rows
FROM sequences
WHERE 2 IN UNNEST(sequences.some_numbers)
ORDER BY matching_rows;
</code></pre>

<p><img width="150" alt="1-1" src="https://user-images.githubusercontent.com/53929665/96666285-c3237a80-1391-11eb-86b9-6eb16327aa7f.PNG" /></p>

<h3 id="조건을-충족하는-값-검색">조건을 충족하는 값 검색</h3>
<ul>
  <li>배열에서 <u>조건과 일치하는 값을 검색</u>하려면<br /><code class="language-plaintext highlighter-rouge">UNNEST</code>를 사용하여 배열의 요소 테이블을 반환하고,<br /><code class="language-plaintext highlighter-rouge">WHERE</code>를 사용하여 서브 쿼리에서 결과 테이블을 필터링 시킨 뒤에<br /><code class="language-plaintext highlighter-rouge">EXIST</code>를 사용하여 필터링된 테이블에 행이 포함되어 있는지 확인한다.</li>
  <li>다음 예시는 배열 열에 5보다 큰 숫자를 가진 행의 id값을 반환한다.</li>
</ul>

<pre><code class="language-SQL">WITH sequences AS
  (SELECT 1 AS id, [0, 1, 1, 2, 3, 5] AS some_numbers
   UNION ALL SELECT 2 AS id, [2, 4, 8, 16, 32] AS some_numbers
   UNION ALL SELECT 3 AS id, [5, 10] AS some_numbers)
SELECT id AS matching_rows FROM sequences
WHERE EXISTS (SELECT *
              FROM UNNEST(some_numbers) AS x
              WHERE x &gt; 5);
</code></pre>

<p><img width="150" alt="1-2" src="https://user-images.githubusercontent.com/53929665/96666287-c3bc1100-1391-11eb-9b84-c5c4be2f8858.PNG" /></p>

<h3 id="조건을-충족하는-struct-필드-값-검색">조건을 충족하는 STRUCT 필드 값 검색</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">STRUCT</code>로 구성된 배열에서<br />값이 조건과 일치하는 필드를 검색하려면 <code class="language-plaintext highlighter-rouge">UNNEST</code>를 사용하여<br /> 각 <code class="language-plaintext highlighter-rouge">STRUCT</code>필드에 대한 열이 있는 테이블을 반환한 후<br /><code class="language-plaintext highlighter-rouge">WHERE EXSITS</code>를 사용하여 이 테이블에서 일치하지 않는 행을 필터링한다.</li>
  <li>다음 예시는 배열 열에 <code class="language-plaintext highlighter-rouge">STRUCT</code>필드의 값이 3보다 큰 b가 포하된 행을 반환한다.</li>
</ul>

<pre><code class="language-SQL">WITH sequences AS
  (SELECT 1 AS id, [STRUCT(0 AS a, 1 AS b)] AS some_numbers
   UNION ALL SELECT 2 AS id, [STRUCT(2 AS a, 4 AS b)] AS some_numbers
   UNION ALL SELECT 3 AS id, [STRUCT(5 AS a, 3 AS b), STRUCT (7 AS a, 4 AS b)]
     AS some_numbers)
SELECT id AS matching_rows
FROM sequences
WHERE EXISTS (SELECT 1
              FROM UNNEST(some_numbers)
              WHERE b &gt; 3);
</code></pre>

<p><img width="150" alt="1-3" src="https://user-images.githubusercontent.com/53929665/96666288-c3bc1100-1391-11eb-98e9-d1ff21ef8ff4.PNG" /></p>

<hr />
<h3 id="-2-배열과-집계-">[ 2. 배열과 집계 ]</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">ARRAY_AGG()</code>
    <ul>
      <li>값들을 배열로 집계할 수 있다.</li>
      <li>집계 순서는 임의로 지정된다.</li>
      <li>BigQuery UI에서는 하나의 행으로 묶는다는 개념으로 이해하면 쉽다.</li>
    </ul>
  </li>
</ul>

<pre><code class="language-SQL">WITH fruits AS
  (SELECT "apple" AS fruit
   UNION ALL SELECT "pear" AS fruit
   UNION ALL SELECT "banana" AS fruit)
SELECT ARRAY_AGG(fruit) AS fruit_basket
FROM fruits;
</code></pre>

<p><img width="250" alt="2" src="https://user-images.githubusercontent.com/53929665/96666289-c454a780-1391-11eb-8a6b-d21b3014c7b5.PNG" /></p>

<ul>
  <li>이 함수는 값을 연결하는 순서를 보장하지 않는다.<br />따라서, 배열 요소를 정렬하려면 <code class="language-plaintext highlighter-rouge">ORDER BY</code>를 사용한다.</li>
  <li>예를 들면 다음과 같다.</li>
</ul>

<pre><code class="language-SQL">WITH fruits AS
  (SELECT "apple" AS fruit
   UNION ALL SELECT "pear" AS fruit
   UNION ALL SELECT "banana" AS fruit)
SELECT ARRAY_AGG(fruit ORDER BY fruit) AS fruit_basket
FROM fruits;
</code></pre>

<p><img width="150" alt="2-1" src="https://user-images.githubusercontent.com/53929665/96666290-c454a780-1391-11eb-9d29-77bdbb4f814c.PNG" /></p>

<ul>
  <li>또한, 배열 요소에 <code class="language-plaintext highlighter-rouge">SUM()</code>과 같은 집계 함수를 적용할 수 있다.</li>
  <li>예를 들면 다음 쿼리는 <code class="language-plaintext highlighter-rouge">squences</code>테이블의 각 행에 대한 배열 요소의 합계를 반환한다.</li>
</ul>

<pre><code class="language-SQL">WITH sequences AS
  (SELECT [0, 1, 1, 2, 3, 5] AS some_numbers
   UNION ALL SELECT [2, 4, 8, 16, 32] AS some_numbers
   UNION ALL SELECT [5, 10] AS some_numbers)
SELECT some_numbers,
  (SELECT SUM(x)
   FROM UNNEST(s.some_numbers) x) AS sums
FROM sequences s;
</code></pre>

<p><img width="150" alt="2-2" src="https://user-images.githubusercontent.com/53929665/96666291-c4ed3e00-1391-11eb-827e-d7cafb93059d.PNG" /></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">ARRAY_AGG()</code>가 <u>한 개의 값이 저장된 단일 행</u>들을 <u>하나로 배열로 묶어</u>주는 반면에,</li>
  <li><u>배열로 이루어진 다수의 단일 행</u>들을 <u>하나의 배열로 묶어</u>주는 <code class="language-plaintext highlighter-rouge">ARRAY_CONCAT_AGG()</code>도 있다.</li>
</ul>

<pre><code class="language-SQL">WITH aggregate_example AS
  (SELECT [1,2] AS numbers
   UNION ALL SELECT [3,4] AS numbers
   UNION ALL SELECT [5, 6] AS numbers)
SELECT ARRAY_CONCAT_AGG(numbers) AS count_to_six_agg
FROM aggregate_example;
</code></pre>

<p><img width="250" alt="2-3" src="https://user-images.githubusercontent.com/53929665/96666292-c4ed3e00-1391-11eb-9f3e-b38539734c63.PNG" /></p>
:ET