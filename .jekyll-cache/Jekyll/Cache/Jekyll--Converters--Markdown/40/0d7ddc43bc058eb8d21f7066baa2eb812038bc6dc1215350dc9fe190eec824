I""b<h4 id="contents">Contents</h4>
<ul>
  <li><a href="#merge-메소드">merge 메소드</a></li>
  <li><a href="#join-메소드">join 메소드</a></li>
</ul>

<p>지난 포스팅에 이어서 pandas의 <code class="language-plaintext highlighter-rouge">merge</code>와 <code class="language-plaintext highlighter-rouge">join</code>에 대해서 정리하였습니다.</p>

<p><br /></p>

<hr />

<h2 id="merge-메소드"><span style="color:navy">merge 메소드<span></span></span></h2>

<p>다음은 <code class="language-plaintext highlighter-rouge">merge</code>메소드의 기본 format이다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">DataFrame1</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">DataFrame2</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">'inner'</span><span class="p">,</span> 
                 <span class="n">on</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
                 <span class="c1">#| left_on=None, right_on=None, 
</span>                 <span class="c1">#| left_index=False, right_index=False, 
</span>                 <span class="n">suffixes</span><span class="o">=</span><span class="p">(</span><span class="s">'_x'</span><span class="p">,</span> <span class="s">'_y'</span><span class="p">))</span>

<span class="s">"""
혹은 아래와 같이 사용할 수 있다.
pd.merge(DataFrame1, DataFrame2, how='innter',
				 on=None,
				 #| left_on=None, right_on=None, 
				 #| left_index=False, right_index=False, 
				 suffixes=('_x', '_y'))
"""</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">DataFrame1</code> (<em><strong>DataFrame or named Series</strong></em>)
    <ul>
      <li>merge의 대상에 해당하는 객체로, merge로 인해 출력된 결과의 좌측에 위치한다.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">DataFrame2</code> (<em><strong>DataFrame or named Series</strong></em>)
    <ul>
      <li>merge의 대상에 해당하는 객체로, merge로 인해 출력된 결과의 우측에 위치한다.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">how</code> (<em><strong>{‘left’, ‘right’, ‘outer’, ‘inner’, ‘cross’}, default ‘inner’</strong></em>)
    <ul>
      <li>두 객체를 어떤 방식으로 조인시킬 것인지 결정한다.</li>
      <li><code class="language-plaintext highlighter-rouge">left</code>, <code class="language-plaintext highlighter-rouge">right</code>, <code class="language-plaintext highlighter-rouge">outer</code>, <code class="language-plaintext highlighter-rouge">inner</code>, <code class="language-plaintext highlighter-rouge">cross</code> 조인을 지정할 수 있으며, 
  <code class="language-plaintext highlighter-rouge">inner</code> 조인이 default에 해당한다.</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>조인의 기준이되는 Key를 지정하는 파라미터는 아래와 같다.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">on</code> (<em><strong>label or list</strong></em>)
        <ul>
          <li>Column을 조인 Key로 지정할 때 사용한다.</li>
          <li>주로 각 객체의 조인 Key가 동일한 이름일 경우에 사용한다.</li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">left_on</code>, <code class="language-plaintext highlighter-rouge">right_on</code> (<em><strong>label or list, or array-like</strong></em>)
        <ul>
          <li>
            <p>Column을 조인 Key로 지정할 때 사용한다.</p>

            <p>주로 각 객체의 조인 Key가 동일한 이름이 아닐 경우에 사용한다.</p>
          </li>
          <li>
            <p>이때 <code class="language-plaintext highlighter-rouge">left_on</code>에는 DataFrame1의 조인 Key를 지정하며,</p>

            <p><code class="language-plaintext highlighter-rouge">right_on</code>에는 DataFrame2의 조인 Key 지정한다.</p>
          </li>
          <li>
            <p>물론  <code class="language-plaintext highlighter-rouge">on</code>대신 사용할 수 있다.</p>
          </li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">left_index</code>, <code class="language-plaintext highlighter-rouge">right_index</code> (<em><strong>bool, default False</strong></em>)
        <ul>
          <li>Index를 조인 Key로 지정할 때 주로 사용한다.</li>
          <li>
            <p>이때 <code class="language-plaintext highlighter-rouge">left_index</code>에는 DataFrame1의 조인 Key를 지정하며,</p>

            <p><code class="language-plaintext highlighter-rouge">right_index</code>에는 DataFrame2의 조인 Key를 지정한다.</p>
          </li>
          <li>물론 <code class="language-plaintext highlighter-rouge">set_index</code>와 함께 <code class="language-plaintext highlighter-rouge">on</code>대신 사용할 수 있다.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><br /></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">suffixes</code> (<em><strong>list-like, default is (“_x”, “_y”)</strong></em>)
    <ul>
      <li><code class="language-plaintext highlighter-rouge">merge</code>되는 두 객체가 동일한 Column의 이름을 가지고 있을 경우, <code class="language-plaintext highlighter-rouge">merge</code>로 인해 출력된 결과에서 동일한 이름의 Column에 지정한 접미사를 붙여 구분할 때 사용한다.</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<p>조인 방식에 대한 차이점을 보다는 조인의 Key를 지정하는 방식에 초점을 맞추어 보도록하자.</p>

<p>다음은 예제에 사용될 DataFrame이다. df1의 경우 직원의 이름과 직원의 부서 ID(≈ foreign key)를 담고있는 DataFrame이며, df2의 경우 부서 ID(≈ primary key)와 해당 부서 이름을 담고 있는 DataFrame이다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="s">'A'</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="s">'B'</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="s">'C'</span><span class="p">,</span> <span class="mi">3</span><span class="p">]],</span>
                    <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">'row1'</span><span class="p">,</span> <span class="s">'row2'</span><span class="p">,</span> <span class="s">'row3'</span><span class="p">],</span>
                    <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'name'</span><span class="p">,</span> <span class="s">'deptno'</span><span class="p">])</span>

<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="s">'RESEARCH'</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="s">'MARKETER'</span><span class="p">],</span> 
                    <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="s">'DEVELOPER'</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="s">'CEO'</span><span class="p">]],</span>
                    <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">'row1'</span><span class="p">,</span> <span class="s">'row2'</span><span class="p">,</span> <span class="s">'row3'</span><span class="p">,</span> <span class="s">'row4'</span><span class="p">],</span>
                    <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'id'</span><span class="p">,</span> <span class="s">'dname'</span><span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="s">'[ df1, 직원 테이블 ]</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="n">df1</span><span class="p">)</span>
<span class="k">print</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="s">'[ df2, 부서 테이블 ]</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="n">df2</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[ df1, 직원 테이블 ]
      name  deptno
row1    A       1
row2    B       2
row3    C       3

[ df2, 부서 테이블 ]
      id      dname
row1   1   RESEARCH
row2   2   MARKETER
row3   3  DEVELOPER
row4   4        CEO
</code></pre></div></div>

<p><br /></p>

<p>각 직원이 어떤 부서에 속한지 확인하기 위하여 df1과 df2에 <code class="language-plaintext highlighter-rouge">merge</code>를 적용해보자. 이때, 조인의 Key로는 각각 deptno와 id를 지정할 것이며, 두 Column의 이름이 다르기 때문에 <code class="language-plaintext highlighter-rouge">left/right_on</code>을 사용하였다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">result</span> <span class="o">=</span> <span class="n">df1</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df2</span><span class="p">,</span> <span class="n">left_on</span> <span class="o">=</span> <span class="s">'deptno'</span><span class="p">,</span> <span class="n">right_on</span> <span class="o">=</span> <span class="s">'id'</span><span class="p">,</span> <span class="n">how</span> <span class="o">=</span> <span class="s">'left'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  name  deptno  id      dname
0    A       1   1   RESEARCH
1    B       2   2   MARKETER
2    C       3   3  DEVELOPER
</code></pre></div></div>

<p><br /></p>

<p>이번에는 조인의 기준이 되는 Column의 이름을 동일하게 변경하고, 조인의 Key를 <code class="language-plaintext highlighter-rouge">on</code>과 <code class="language-plaintext highlighter-rouge">left/right_on</code>을 각각 이용한 예제이다. 서로 다른 이름의 Column을 조인 기준으로 이용했을 때와 달리 반환값에서는 동일 Column의 중복이 없는 것을 확인할 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span><span class="p">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s">'deptno'</span><span class="p">:</span><span class="s">'Key'</span><span class="p">},</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">df2</span><span class="p">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s">'id'</span><span class="p">:</span><span class="s">'Key'</span><span class="p">},</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>

<span class="n">result1</span> <span class="o">=</span> <span class="n">df1</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df2</span><span class="p">,</span> <span class="n">on</span> <span class="o">=</span> <span class="s">'Key'</span><span class="p">,</span> <span class="n">how</span> <span class="o">=</span> <span class="s">'left'</span><span class="p">)</span>
<span class="n">result2</span> <span class="o">=</span> <span class="n">df1</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df2</span><span class="p">,</span> <span class="n">left_on</span> <span class="o">=</span> <span class="s">'Key'</span><span class="p">,</span> <span class="n">right_on</span> <span class="o">=</span> <span class="s">'Key'</span><span class="p">,</span> <span class="n">how</span> <span class="o">=</span> <span class="s">'left'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">'[on]</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="n">result1</span><span class="p">)</span>
<span class="k">print</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="s">'[left/right_on]</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="n">result2</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[on]
  name  Key      dname
0    A    1   RESEARCH
1    B    2   MARKETER
2    C    3  DEVELOPER

[left/right_on]
  name  Key      dname
0    A    1   RESEARCH
1    B    2   MARKETER
2    C    3  DEVELOPER
</code></pre></div></div>

<p><br /></p>

<p>다음으로, <code class="language-plaintext highlighter-rouge">left/right_index</code>를 사용하는 예제를 확인해보자.</p>

<p>먼저, 위의 DataFrame의 Join 기준이 되는 Key를 Index로 변경하였다.  그리고, 변경된 Index를 기준으로 <code class="language-plaintext highlighter-rouge">left/right_index</code>를 <code class="language-plaintext highlighter-rouge">True</code>로 지정한 merge를 두 객체에 적용하였다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sr1</span> <span class="o">=</span> <span class="n">df1</span><span class="p">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'Key'</span><span class="p">)</span>
<span class="n">sr2</span> <span class="o">=</span> <span class="n">df2</span><span class="p">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'Key'</span><span class="p">)</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">sr1</span><span class="p">,</span> <span class="n">sr2</span><span class="p">,</span> <span class="n">left_index</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">right_index</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">'inner'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    name      dname
Key                
1      A   RESEARCH
2      B   MARKETER
3      C  DEVELOPER
</code></pre></div></div>

<p><br /></p>

<p>마지막으로, <code class="language-plaintext highlighter-rouge">suffixes</code> 파라미터를 사용하는 예제를 확인해보자.</p>

<p>다음 예제에서 조인의 기준이 되는 key값을 제외하고 두 DataFrame에 dup1과 dup2라는 동일한 Column이 존재하는 것을 확인할 수 있으며, <code class="language-plaintext highlighter-rouge">suffixes</code>파라미터를 적용한 merge의 반환값으로 두 중복된 Column이 <code class="language-plaintext highlighter-rouge">suffixes</code>파라미터에 의해 지정한 접미사로 구분되는 것을 확인할 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">],[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">]],</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'Key'</span><span class="p">,</span> <span class="s">'dup1'</span><span class="p">,</span> <span class="s">'dup2'</span><span class="p">])</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">],[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">]],</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'Key'</span><span class="p">,</span> <span class="s">'dup1'</span><span class="p">,</span> <span class="s">'dup2'</span><span class="p">])</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'Key'</span><span class="p">,</span> <span class="n">suffixes</span><span class="o">=</span><span class="p">(</span><span class="s">'_x'</span><span class="p">,</span> <span class="s">'_y'</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   Key  dup1_x  dup2_x  dup1_y  dup2_y
0    1       2       3       2       3
1    3       4       5       4       5
2    5       6       7       6       7
</code></pre></div></div>

<p><br /></p>

<hr />

<h2 id="join-메소드"><span style="color:navy">join 메소드<span></span></span></h2>

<p><code class="language-plaintext highlighter-rouge">join</code>메소드의 기본 형태는 다음과 같다. 해당 메소드는 <code class="language-plaintext highlighter-rouge">merge</code>메소드를 기반으로 만들어졌기 때문에 기본적인 파라미터는 <code class="language-plaintext highlighter-rouge">merge</code>와 동일한 것을 확인할 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">DataFrame</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">other</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">'left'</span><span class="p">,</span> <span class="n">lsuffix</span><span class="o">=</span><span class="s">''</span><span class="p">,</span> <span class="n">rsuffix</span><span class="o">=</span><span class="s">''</span><span class="p">,</span> <span class="n">sort</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div>

<p>그리고, <code class="language-plaintext highlighter-rouge">join</code>은 <code class="language-plaintext highlighter-rouge">left/right_index</code>를 지정한 <code class="language-plaintext highlighter-rouge">merge</code>와 동일한 결합 방식을 사용한다.</p>

<p>즉, <code class="language-plaintext highlighter-rouge">join</code>은 행 인덱스를 기준으로 두 객체를 결합시킨다.</p>

<p><br /></p>

<p>위의 직원 데이터와 부서 데이터를 <code class="language-plaintext highlighter-rouge">merge</code>대신  <code class="language-plaintext highlighter-rouge">join</code>을 이용해서 결합시키는 예제는 다음과 같다. 이때 반환된 DataFrame의 인덱스는 sr1을 따라가는 것을 확인할 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="s">'A'</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="s">'B'</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="s">'C'</span><span class="p">,</span> <span class="mi">3</span><span class="p">]],</span>
                   <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">'row1'</span><span class="p">,</span> <span class="s">'row2'</span><span class="p">,</span> <span class="s">'row3'</span><span class="p">],</span>
                   <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'name'</span><span class="p">,</span> <span class="s">'deptno'</span><span class="p">])</span>

<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="s">'RESEARCH'</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="s">'MARKETER'</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="s">'DEVELOPER'</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="s">'CEO'</span><span class="p">]],</span>
                   <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">'row1'</span><span class="p">,</span> <span class="s">'row2'</span><span class="p">,</span> <span class="s">'row3'</span><span class="p">,</span> <span class="s">'row4'</span><span class="p">],</span>
                   <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'id'</span><span class="p">,</span> <span class="s">'dname'</span><span class="p">])</span>

<span class="n">sr1</span> <span class="o">=</span> <span class="n">df1</span><span class="p">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'deptno'</span><span class="p">)</span>
<span class="n">sr2</span> <span class="o">=</span> <span class="n">df2</span><span class="p">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'id'</span><span class="p">)</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">sr1</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">sr2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>       name      dname
deptno                
1         A   RESEARCH
2         B   MARKETER
3         C  DEVELOPER
</code></pre></div></div>

<p><br /></p>

<hr />

<h2 id="references"><span style="color:navy">References<span></span></span></h2>

<ul>
  <li><a href="https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.merge.html">pandas doc : pandas.DataFrame.merge</a></li>
  <li><a href="https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.join.html">pandas.doc : pandas.DataFrame.join</a></li>
  <li>오승환, 『파이썬 머신러닝 판다스 데이터 분석』, 정보문화사 (2019)</li>
</ul>
:ET